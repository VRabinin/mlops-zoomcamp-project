name: mlops-zoomcamp-project
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ${POSTGRES_HOST}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mlops}
      POSTGRES_USER: ${POSTGRES_USER:-mlops_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mlops_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./app_data/postgres:/var/lib/postgresql/data
    networks:
      - mlops-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: mlops-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - mlops-network

  # MLFlow Tracking Server
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.22.0
    container_name: mlops-mlflow
    ports:
      - "${MLFLOW_PORT:-5000}:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=${DATABASE_URL}
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=s3://mlflow-artifacts/
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER:-minioadmin}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD:-minioadmin}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:${MINIO_PORT:-9000}
      - AWS_DEFAULT_REGION=us-east-1
    command: >
      /bin/sh -c "pip install psycopg2-binary boto3 && mlflow server
      --backend-store-uri ${DATABASE_URL}
      --default-artifact-root s3://mlflow-artifacts/
      --host 0.0.0.0
      --port 5000"
    depends_on:
      - postgres
      - minio
    networks:
      - mlops-network

    # Prefect Server
  prefect-server:
    image: prefecthq/prefect:3-latest
    container_name: mlops-prefect-server
    ports:
      - "${PREFECT_PORT:-4200}:${PREFECT_PORT:-4200}"
    environment:
      - PREFECT_UI_URL=http://localhost:${PREFECT_PORT:-4200}
      - PREFECT_API_URL=http://localhost:${PREFECT_PORT:-4200}/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://mlops_user:mlops_password@mlops-postgres:5432/mlops
      - KAGGLE_USERNAME=${KAGGLE_USERNAME}
      - KAGGLE_KEY=${KAGGLE_KEY}
      - PYTHONPATH=/app
    volumes:
      - .:/app  # Mount source code for flow parsing and validation
      - prefect_data:/root/.prefect
    working_dir: /app
    command: >
      /bin/sh -c "
      echo 'Installing additional dependencies...';
      pip install prefect-aws boto3 kaggle pandas scikit-learn;
      echo 'Starting Prefect server...';
      prefect server start --host 0.0.0.0 --port ${PREFECT_PORT:-4200};
      "
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - mlops-network

  # MinIO S3-compatible object storage
  minio:
    image: minio/minio:RELEASE.2024-07-16T23-46-41Z
    container_name: mlops-minio
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
      - MINIO_DEFAULT_BUCKETS=mlflow-artifacts,data-lake,model-artifacts
    volumes:
      - ./app_data/minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s
    networks:
      - mlops-network

  # Initialize MinIO buckets
  minio-setup:
    image: minio/mc:RELEASE.2024-07-11T18-01-28Z
    container_name: mlops-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      sleep 5;
      echo 'Configuring MinIO client...';
      mc alias set minio http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin};
      echo 'Creating S3 buckets...';
      mc mb minio/mlflow-artifacts --ignore-existing;
      mc mb minio/data-lake --ignore-existing;
      mc mb minio/model-artifacts --ignore-existing;
      echo 'Setting bucket policies...';
      mc anonymous set public minio/mlflow-artifacts;
      mc anonymous set public minio/data-lake;
      mc anonymous set public minio/model-artifacts;
      echo 'MinIO buckets created and configured successfully';
      exit 0;
      "
    networks:
      - mlops-network

  # Initialize Prefect work pool and start worker
  prefect-setup:
    image: prefecthq/prefect:3-latest
    container_name: mlops-prefect-setup
    depends_on:
      - prefect-server
    environment:
      - PREFECT_API_URL=http://mlops-prefect-server:${PREFECT_PORT:-4200}/api
      - PYTHONPATH=/app
      - KAGGLE_USERNAME=${KAGGLE_USERNAME}
      - KAGGLE_KEY=${KAGGLE_KEY}
    volumes:
      - .:/app  # Mount the entire project directory
    working_dir: /app
    entrypoint: >
      /bin/sh -c "
      echo 'Installing worker dependencies...';
      pip install prefect-aws boto3 kaggle pandas scikit-learn pyyaml requests;
      echo 'Waiting for Prefect server to be ready...';
      sleep 15;
      echo 'Creating default work pool...';
      prefect work-pool create default-agent-pool --type process || echo 'Work pool already exists';
      echo 'Starting Prefect worker with source code access...';
      prefect worker start --pool default-agent-pool;
      "
    restart: unless-stopped
    networks:
      - mlops-network

volumes:
  redis_data:
  prefect_data:

networks:
  mlops-network:
    driver: bridge
